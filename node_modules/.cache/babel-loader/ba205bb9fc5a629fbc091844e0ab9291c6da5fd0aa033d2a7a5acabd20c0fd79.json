{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router\";\nexport const DetailProduct = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id, 'id');\n  const [product, setProducts] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n        if (!response.ok) throw new Error('Failed to fetch products');\n        const data = await response.json();\n        setProducts(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n  return {\n    product\n  };\n};\n_s(DetailProduct, \"XREKmysg+MFIw8gW07CA3eeXx14=\", false, function () {\n  return [useParams];\n});\n_c = DetailProduct;\nvar _c;\n$RefreshReg$(_c, \"DetailProduct\");","map":{"version":3,"names":["React","useEffect","useState","useParams","DetailProduct","_s","id","console","log","product","setProducts","loading","setLoading","error","setError","fetchProducts","response","fetch","ok","Error","data","json","message","_c","$RefreshReg$"],"sources":["D:/E-Commerce/oganimaster/src/components/ShopDetails/detailProduct.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router\"\r\n\r\nexport const DetailProduct = () => {\r\n    const { id } = useParams();\r\n    console.log(id,'id')\r\n    const [product, setProducts] = useState({})\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch(`https://fakestoreapi.com/products/${id}`);\r\n                if (!response.ok) throw new Error('Failed to fetch products');\r\n                const data = await response.json();\r\n                setProducts(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        {\r\n            product \r\n        }\r\n\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,CAAC,CAAC;EAC1BI,OAAO,CAACC,GAAG,CAACF,EAAE,EAAC,IAAI,CAAC;EACpB,MAAM,CAACG,OAAO,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGxCD,SAAS,CAAC,MAAM;IACZ,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCX,EAAE,EAAE,CAAC;QACvE,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,WAAW,CAACU,IAAI,CAAC;QACjBR,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;QACvBV,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDG,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OACI;IACIN;EACJ,CAAC;AAGT,CAAC;AAAAJ,EAAA,CA9BYD,aAAa;EAAA,QACPD,SAAS;AAAA;AAAAoB,EAAA,GADfnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}